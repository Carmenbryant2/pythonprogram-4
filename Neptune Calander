(1,"Polarisday")
(2,"Siriusday")
(3,"Betelgeuseday")
(4,"Rigelday")
(5,"Vegaday")
(6,"Antaresday")
(7,"Canopusday")
(8,"Mizarday")
(9,"Fomalhautday")
(10,"Arcturusday")
(11,"Denebday")
(12,"Procyonday")
(13,"Spicaday")
(14,"Thubanday")
(15,"Regulusday")

#These four statements below will print the Typeof calendar
#that this program will be making, my name and the year that it was
#made. Then two statemennts that will create to line spaces.
print("Neptunian Calender Program, version 1.0")
print(" (c) (Carmen Bryant), 2019")
print("")
print("")

#These are four global variables that involve the days to skip if the month is a jubilee,
#the day the user inputs will be the start day, for the jubilee month check,
#and for the variable for number of days.

startday = ""
isjubilee = False
numdays = 0



#The function below is to show and take the users input for the starting day
#of the month, the number of days in the month, and if jubilee is a month or not.
#It will also print a statment to tell which day the month starts on how many
#days are in the month.
def shownmenu():

    global userstartday

    global usernumdays

    global userjubilee


    
        
            
day = input("Enter the starting day of the month: ")
if (day == "Polarisday"):
    userstartday = "Polarisday"

            
elif (day == "Siriusday"):
    userstartday = "Siriusday"
                
            
elif (day == "Betelgeusday"):
    userstartday = "Betelgeusday"
    
            
elif (day == "Rigelday"):
    userstartday = "Rigelday"
               
                
elif (day == "Vegaday"):
                userstartday = "Vegaday"
            
elif(day == "Antaresday"):
                userstartday = "Antaresday"
            
elif(day == "Canopusday"):
                userstartday = "Canopusday"
            
elif(day == "Mizarday"):
                userstartday = "Mizarday"
            
elif(day == "Fomalhautday"):
                userstartday = "Formalhautday"
            
elif(day == "Arcturusday"):
                userstartday = "Arcturusday"
            
elif(day == "Denebday"):
                userstartday = "Denebday"
            
elif(day == "Procyonday"):
                userstartday = "Procyonday"
            
elif(day == "Thubanday"):
                userstartday = "Thubanday"
            
elif(day == "Regulusday"):
                userstartday = "Regulusday"
            
else:
    print("")
    print("Invalid starting day, should be one of Polarisday,"\
          " Siriusday, Betelgeusday, Rigelday, Vegaday. Antaresday,"\
          " Canopusday, Mizarday, Fomalhautday, Arcturusday,"\
          " Denebday, Procyonday, Thubanday, or Regulusday, try again,")
    print("")
    day = input("Enter the starting day of the month: ")
    if (day == "Polarisday"):
        userstartday = "Polarisday"
            
    elif (day == "Siriusday"):
        userstartday = "Siriusday"
            
    elif (day == "Betelgeusday"):
        userstartday = "Betelgeusday"
            
    elif (day == "Rigelday"):
        userstartday = "Rigelday"
                
    elif (day == "Vegaday"):
        userstartday = "Vegaday"
            
    elif(day == "Antaresday"):
        userstartday = "Antaresday"
            
    elif(day == "Canopusday"):
        userstartday = "Canopusday"
            
    elif(day == "Mizarday"):
        userstartday = "Mizarday"
            
    elif(day == "Fomalhautday"):
        userstartday = "Formalhautday"
            
    elif(day == "Arcturusday"):
        userstartday = "Arcturusday"
            
    elif(day == "Denebday"):
        userstartday = "Denebday"
            
    elif(day == "Procyonday"):
        userstartday = "Procyonday"
            
    elif(day == "Thubanday"):
        userstartday = "Thubanday"
            
    elif(day == "Regulusday"):
        userstartday = "Regulusday"
            
    else:
        print("")
        print("Invalid starting day, should be one of Polarisday,"\
              " Siriusday, Betelgeusday, Rigelday, Vegaday. Antaresday,"\
              " Canopusday, Mizarday, Fomalhautday, Arcturusday,"\
              " Denebday, Procyonday, Thubanday, or Regulusday, try again,")
            
    

print("")
try:
    numdays = int(input("Enter the number of days in the month: "))
    if (numdays >= 42) and (numdays <= 95):
        usernumdays = numdays
    
    else:
        print("")
        print("Invalid number of days, should be 42 to 95, try again.")
        print("")
        numdays = int(input("Enter the number of days in the month: "))
        if (numdays >= 42) and (numdays <= 95):
            usernumdays = numdays
        
        else:
            print("")
            print("Invalid number of days, should be 42 to 95, try again.")
            print("")
            numdays = int(input("Enter the number of days in the month: "))
except ValueError:
    print("")
    print("Invalid number of days, should be a whole number, try again.")
    print("")
    numdays = int(input("Enter the number of days in the month: "))
    if (numdays >= 42) and (numdays <= 95):
        usernumdays = numdays
    
    else:
        print("")
        print("Invalid number of days, should be 42 to 95, try again.")
        print("")
        numdays = int(input("Enter the number of days in the month: "))
    

    

blankDays = ["Polarisday","Siriusday","Betelgeuseday","Rigelday",\
             "Vegaday","Antaresday","Canopusday","Mizarday","Fomalhautday",\
             "Arcturusday","Denebday","Procyonday","Spicaday",\
             "Thubanday","Regulusday"]


print("")
try:
    userjubilee = input("Is this a Jubilee month?: ")
    if (userjubilee == "no"):
        print("")
        print("Neptunian calendar for the month starting on",userstartday,"with",\
              usernumdays,"days.")
              
        print("")
        print("Po   Si   Be   Ri   Ve   An   Ca   Mi   Fo   Ar   De   Pr   Sp",\
              "  Th   Re")
        for i in range(blankDays):
            print("   ", end="")
        num = 1    
        for i in range(num, usernumdays+1):
            if num < 10:
                print(" "+str(num)+"  ", end="")
            else:
                print(str(num)+" ", end="")
            if ((num+blankDays) % 15) == 0:
                print("")
            num += 1
                
                

        
            
    
            
    elif (userjubilee == "yes"):
        print("")
        print("Neptunian calendar for Jubilee month starting on",userstartday,\
              "with",usernumdays,"days.")
        print("")
        print("Po   Si   Be   Ri   Ve   An   Ca   Mi   Fo   Ar   De   Pr   Sp",\
              "  Th   Re")
        print("")

        
    else:
        print("Invalid response, should be yes or no, try again.")

except ValueError:
    print("Invalid response, should be yes or no, try again.")

    

  

#This function is responsible for using what the user inputs to build the
#calendar. Then to start the days under which day they need to go under based
#on which row and which coloumn tostart the days under going from one
#to however many days are in the calendar based on what the user input
#using the less than or equivelent to the numdays variable so that it knows
#when to stop making the calendar.
#It will also ask the user if they want to create another calendar or not.
#If the user chooses yes then it will use the loop to start the questions over
#again, so that the user can build another calendar.
def buildcalendar():

    global numdays

    global startday

    global jubilee

    global skipdays

    while True:
        shownmenu()
        
        
        print("",end=' ')
        userinp=input("Create another calendar?:")
        #This is to ask the user if they want to create another calendar or not
        if userinp == "yes":
            continue
        else:
            print("Finishing Neptunian Calendar Program, version 1.0")
            break
buildcalendar()
                     


    













